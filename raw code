local Players = game:GetService("Players")
local ScreenGui = Instance.new("ScreenGui")
local MainFrame, Title, KeyFrame = Instance.new("Frame"), Instance.new("TextLabel"), Instance.new("Frame")
local KeyTitle, KeyInput, SubmitButton = Instance.new("TextLabel"), Instance.new("TextBox"), Instance.new("TextButton")
local GetKeyButton = Instance.new("TextButton")  -- Кнопка для получения ключа
local TabsFrame, ContentFrame = Instance.new("Frame"), Instance.new("Frame")
local ESPFrame, PlayerFrame, MiscFrame, InfoFrame = Instance.new("Frame"), Instance.new("Frame"), Instance.new("Frame"), Instance.new("Frame")
local dragging, dragStart, startPos = false, nil, nil
local godModeEnabled = false

-- Настройки GUI
ScreenGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")
MainFrame.Size = UDim2.new(0, 500, 0, 400)
MainFrame.Position = UDim2.new(0.5, -245, 0.5, -200)
MainFrame.BackgroundColor3, MainFrame.BorderSizePixel = Color3.fromRGB(40, 40, 40), 0
MainFrame.BackgroundTransparency = 1
MainFrame.Parent = ScreenGui

-- Заголовок
Title.Size = UDim2.new(1, 0, 0, 50)
Title.Position = UDim2.new(0, 0, 0, 0)
Title.BackgroundColor3, Title.Text = Color3.fromRGB(100, 100, 100), "Skull Hub"
Title.TextColor3, Title.Font, Title.FontSize, Title.TextScaled = Color3.fromRGB(255, 255, 255), Enum.Font.GothamBold, Enum.FontSize.Size24, true
Title.Parent = MainFrame

-- Перетаскивание
Title.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = MainFrame.Position

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

Title.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement and dragging then
		MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + (input.Position.X - dragStart.X), startPos.Y.Scale, startPos.Y.Offset + (input.Position.Y - dragStart.Y))
	end
end)

-- Фрейм для ключа
KeyFrame.Size = UDim2.new(0, 300, 0, 200)
KeyFrame.Position = UDim2.new(0.5, -150, 0.5, -100)
KeyFrame.BackgroundColor3, KeyFrame.BorderSizePixel = Color3.fromRGB(40, 40, 40), 0
KeyFrame.Parent = ScreenGui

-- Заголовок для ключа
KeyTitle.Size = UDim2.new(1, 0, 0, 50)
KeyTitle.Position = UDim2.new(0, 0, 0, 0)
KeyTitle.BackgroundColor3, KeyTitle.Text = Color3.fromRGB(100, 100, 100), "ENTER KEY"
KeyTitle.TextColor3, KeyTitle.Font, KeyTitle.FontSize, KeyTitle.TextScaled = Color3.fromRGB(255, 255, 255), Enum.Font.GothamBold, Enum.FontSize.Size24, true
KeyTitle.Parent = KeyFrame

-- Поле ввода ключа
KeyInput.Size = UDim2.new(1, -20, 0, 40)
KeyInput.Position = UDim2.new(0, 10, 0, 60)
KeyInput.BackgroundColor3, KeyInput.TextColor3, KeyInput.Font, KeyInput.PlaceholderText = Color3.fromRGB(70, 70, 70), Color3.fromRGB(255, 255, 255), Enum.Font.Gotham, "Enter your key here"
KeyInput.Parent = KeyFrame

-- Кнопка отправки
SubmitButton.Size = UDim2.new(0.5, 0, 0, 40)
SubmitButton.Position = UDim2.new(0.25, 0, 0, 110)
SubmitButton.BackgroundColor3, SubmitButton.Text = Color3.fromRGB(90, 90, 90), "Submit"
SubmitButton.TextColor3, SubmitButton.Font, SubmitButton.FontSize, SubmitButton.TextScaled = Color3.fromRGB(255, 255, 255), Enum.Font.GothamBold, Enum.FontSize.Size18, true
SubmitButton.Parent = KeyFrame

-- Кнопка "Get Key"
GetKeyButton.Size = UDim2.new(1, 0, 0, 40)
GetKeyButton.Position = UDim2.new(0, 0, 0, 160)  -- Позиция ниже поля ввода
GetKeyButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
GetKeyButton.Text = "Get Key"
GetKeyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
GetKeyButton.Font = Enum.Font.GothamBold
GetKeyButton.FontSize = Enum.FontSize.Size18
GetKeyButton.TextScaled = true
GetKeyButton.Parent = KeyFrame

-- Создание вкладок
local function createTabButton(name, position)
	local button = Instance.new("TextButton")
	button.Size = UDim2.new(1, 0, 0, 40)
	button.Position = position
	button.BackgroundColor3, button.TextColor3, button.Font, button.FontSize, button.TextScaled = Color3.fromRGB(90, 90, 90), Color3.fromRGB(255, 255, 255), Enum.Font.GothamBold, Enum.FontSize.Size18, true
	button.Text = name
	button.Parent = TabsFrame
	return button
end

-- Создание фреймов и кнопок
TabsFrame.Size = UDim2.new(0, 120, 1, -50)
TabsFrame.Position = UDim2.new(0, 0, 0, 50)
TabsFrame.BackgroundColor3, TabsFrame.Parent = Color3.fromRGB(70, 70, 70), MainFrame

local ESPButton = createTabButton("ESP", UDim2.new(0, 0, 0, 0))
local PlayerButton = createTabButton("Player", UDim2.new(0, 0, 0, 50))
local MiscButton = createTabButton("Misc", UDim2.new(0, 0, 0, 100))
local InfoButton = createTabButton("Info", UDim2.new(0, 0, 0, 150))

ContentFrame.Size = UDim2.new(1, -120, 1, -50)
ContentFrame.Position = UDim2.new(0, 120, 0, 50)
ContentFrame.BackgroundColor3, ContentFrame.Parent = Color3.fromRGB(50, 50, 50), MainFrame

local function createContentFrame()
	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(1, 0, 1, 0)
	frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	frame.Visible = false
	frame.Parent = ContentFrame
	return frame
end

ESPFrame, PlayerFrame, MiscFrame, InfoFrame = createContentFrame(), createContentFrame(), createContentFrame(), createContentFrame()

-- Показать фрейм
local function showFrame(frameToShow)
	for _, frame in pairs(ContentFrame:GetChildren()) do
		if frame:IsA("Frame") then frame.Visible = false end
	end
	frameToShow.Visible = true
	frameToShow.BackgroundTransparency = 1
	frameToShow:TweenSize(UDim2.new(1, 0, 1, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true)
	frameToShow:TweenPosition(UDim2.new(0, 120, 0, 50), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true)
	frameToShow.BackgroundTransparency = 0
end

-- Кнопка ESP Players
local espPlayersButton = Instance.new("TextButton")
espPlayersButton.Size = UDim2.new(0.5, 0, 0, 40)
espPlayersButton.Position = UDim2.new(0.25, 0, 0, 20)
espPlayersButton.BackgroundColor3 = Color3.fromRGB(90, 90, 90)
espPlayersButton.Text = "ESP Players"
espPlayersButton.TextColor3 = Color3.fromRGB(255, 255, 255)
espPlayersButton.Font = Enum.Font.GothamBold
espPlayersButton.FontSize = Enum.FontSize.Size18
espPlayersButton.TextScaled = true
espPlayersButton.Parent = ESPFrame

-- Обработчик клика для espPlayersButton
espPlayersButton.MouseButton1Click:Connect(function()
    assert(Drawing, 'exploit not supported')

    if not syn and not PROTOSMASHER_LOADED then 
        print('Unnamed ESP only officially supports Synapse and Protosmasher! If you\'re an exploit developer and have added drawing API to your exploit, try setting syn as true then checking if that works, otherwise, DM me on discord @ cppbook.org#1968 or add an issue to the Unnamed ESP Github Repository and I\'ll see it through email!') 
    end

    if not cloneref then cloneref = function(o) return o end end

    local UserInputService = cloneref(game:GetService'UserInputService')
    local HttpService = cloneref(game:GetService'HttpService')
    local TweenService = cloneref(game:GetService'TweenService')
    local RunService = cloneref(game:GetService'RunService')
    local Players = game:GetService'Players'
    local LocalPlayer = Players.LocalPlayer
    local Camera = workspace.CurrentCamera
    local Mouse = LocalPlayer:GetMouse()
    local V2New = Vector2.new
    local V3New = Vector3.new
    local WTVP = Camera.WorldToViewportPoint
    local WorldToViewport = function(...) return WTVP(Camera, ...) end
    local Menu = {}
    local MouseHeld = false
    local LastRefresh = 0
    local OptionsFile = 'IC3_ESP_SETTINGS.dat'
    local Binding = false
    local BindedKey = nil
    local OIndex = 0
    local LineBox = {}
    local UIButtons = {}
    local Sliders = {}
    local ColorPicker = { Loading = false, LastGenerated = 0 }
    local Dragging = false
    local DraggingUI = false
    local Rainbow = false
    local DragOffset = V2New()
    local DraggingWhat = nil
    local OldData = {}
    local IgnoreList = {}
    local EnemyColor = Color3.new(1, 0, 0)
    local TeamColor = Color3.new(0, 1, 0)
    local MenuLoaded = false
    local ErrorLogging = false
    local TracerPosition = V2New(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y - 135)
    local DragTracerPosition = false
    local SubMenu = {}
    local IsSynapse = syn and not PROTOSMASHER_LOADED
    local Connections = { Active = {} }
    local Signal = {} Signal.__index = Signal
    local GetCharacter, CurrentColorPicker, Spectating

    local QUAD_SUPPORTED_EXPLOIT = pcall(function() Drawing.new('Quad'):Remove() end)

    shared.MenuDrawingData = shared.MenuDrawingData or { Instances = {} }
    shared.InstanceData = shared.InstanceData or {}
    shared.RSName = shared.RSName or ('UnnamedESP_by_ic3-' .. HttpService:GenerateGUID(false))

    local GetDataName = shared.RSName .. '-GetData'
    local UpdateName = shared.RSName .. '-Update'

    local Debounce = setmetatable({}, {
        __index = function(t, i)
            return rawget(t, i) or false
        end
    })

    if shared.UESP_InputChangedCon then shared.UESP_InputChangedCon:Disconnect() end
    if shared.UESP_InputBeganCon then shared.UESP_InputBeganCon:Disconnect() end
    if shared.UESP_InputEndedCon then shared.UESP_InputEndedCon:Disconnect() end
    if shared.CurrentColorPicker then shared.CurrentColorPicker:Dispose() end

    local function IsStringEmpty(String)
        if type(String) == 'string' then
            return String:match'^%s+$' ~= nil or #String == 0 or String == '' or false;
        end

        return false;
    end

    local function Set(t, i, v) t[i] = v end

    local Teams = {};
    local CustomTeams = { -- Games that don't use roblox's team system
        [2563455047] = {
            Initialize = function()
                Teams.Sheriffs = {}; -- prevent big error
                Teams.Bandits = {}; -- prevent big error
                local Func = game:GetService'ReplicatedStorage':WaitForChild('RogueFunc', 1);
                local Event = game:GetService'ReplicatedStorage':WaitForChild('RogueEvent', 1);
                local S, B = Func:InvokeServer'AllTeamData';

                Teams.Sheriffs = S;
                Teams.Bandits = B;

                Event.OnClientEvent:Connect(function(id, PlayerName, Team, Remove) -- stolen straight from decompiled src lul
                    if id == 'UpdateTeam' then
                        local TeamTable, NotTeamTable
                        if Team == 'Bandits' then
                            TeamTable = TDM.Bandits
                            NotTeamTable = TDM.Sheriffs
                        else
                            TeamTable = TDM.Sheriffs
                            NotTeamTable = TDM.Bandits
                        end
                        if Remove then
                            TeamTable[PlayerName] = nil
                        else
                            TeamTable[PlayerName] = true
                            NotTeamTable[PlayerName] = nil
                        end
                        if PlayerName == LocalPlayer.Name then
                            TDM.Friendlys = TeamTable
                            TDM.Enemies = NotTeamTable
                        end
                    end
                end)
            end;
            CheckTeam = function(Player)
                local LocalTeam = Teams.Sheriffs[LocalPlayer.Name] and Teams.Sheriffs or Teams.Bandits;

                return LocalTeam[Player.Name] and true or false;
            end;
        };
        [5208655184] = {
            CheckTeam = function(Player)
                local LocalLastName = LocalPlayer:GetAttribute'LastName' if not LocalLastName or IsStringEmpty(LocalLastName) then return true end
                local PlayerLastName = Player:GetAttribute'LastName' if not PlayerLastName then return false end

                return PlayerLastName == LocalLastName
            end
        };
        [3541987450] = {
            CheckTeam = function(Player)
                local LocalStats = LocalPlayer:FindFirstChild'leaderstats';
                local LocalLastName = LocalStats and LocalStats:FindFirstChild'LastName'; if not LocalLastName or IsStringEmpty(LocalLastName.Value) then return true; end
                local PlayerStats = Player:FindFirstChild'leaderstats';
                local PlayerLastName = PlayerStats and PlayerStats:FindFirstChild'LastName'; if not PlayerLastName then return false; end

                return PlayerLastName.Value == LocalLastName.Value;
            end;
        };
        [6032399813] = {
            CheckTeam = function(Player)
                local LocalStats = LocalPlayer:FindFirstChild'leaderstats';
                local LocalGuildName = LocalStats and LocalStats:FindFirstChild'Guild'; if not LocalGuildName or IsStringEmpty(LocalGuildName.Value) then return true; end
                local PlayerStats = Player:FindFirstChild'leaderstats';
                local PlayerGuildName = PlayerStats and PlayerStats:FindFirstChild'Guild'; if not PlayerGuildName then return false; end

                return PlayerGuildName.Value == LocalGuildName.Value;
            end;
        };
        [5735553160] = {
            CheckTeam = function(Player)
                local LocalStats = LocalPlayer:FindFirstChild'leaderstats';
                local LocalGuildName = LocalStats and LocalStats:FindFirstChild'Guild'; if not LocalGuildName or IsStringEmpty(LocalGuildName.Value) then return true; end
                local PlayerStats = Player:FindFirstChild'leaderstats';
                local PlayerGuildName = PlayerStats and PlayerStats:FindFirstChild'Guild'; if not PlayerGuildName then return false; end

                return PlayerGuildName.Value == LocalGuildName.Value;
            end;
        };
    };

    local RenderList = {Instances = {}};

    function RenderList:AddOrUpdateInstance(Instance, Obj2Draw, Text, Color)
        RenderList.Instances[Instance] = { ParentInstance = Instance; Instance = Obj2Draw; Text = Text; Color = Color };
        return RenderList.Instances[Instance];
    end

    local CustomPlayerTag;
    local CustomESP;
    local CustomCharacter;
    local GetHealth;
    local GetAliveState;
    local CustomRootPartName;

    local Modules = {
        [292439477] = {
            Initialize = function()
                if not create_comm_channel or not get_comm_channel then return end

                local run_on_actor = runonactor or run_on_actor
                local EventID, Event = create_comm_channel()
                Event.Event:Connect(function(List)
                    PF_CharList = List
                end)

                for Index, Actor in pairs(getactors()) do
                    run_on_actor(Actor, [[
                        local Event = get_comm_channel(...)

                        if not getrenv().shared.require then return end

                        local RunService = game:GetService'RunService'
                        local Cache = debug.getupvalues(getrenv().shared.require)[1]._cache if not Cache then return end
                        local ReplicationInterface = rawget(rawget(Cache, 'ReplicationInterface'), 'module') if not ReplicationInterface then return end
                        local getEntry = rawget(ReplicationInterface, 'getEntry')

                        if shared.UNPFHB then shared.UNPFHB:Disconnect() end

                        shared.UNPFHB = RunService.Heartbeat:Connect(function()
                            local CharacterList = {}

                            for Player, Entry in pairs(debug.getupvalues(getEntry)[1]) do
                                local TPO = rawget(Entry, '_thirdPersonObject') if not TPO then continue end
                                local Character = rawget(TPO, '_characterHash') if not Character then continue end
                                local Torso = rawget(Character, 'Torso') if not Torso then continue end
                                local HealthState = rawget(Entry, '_healthstate')

                                CharacterList[Player.Name] = {
                                    Head = Character.Head,
                                    Torso = Character.Torso,
                                    Health = HealthState and rawget(HealthState, 'health0') or 100,
                                    Alive = rawget(Entry, '_alive')
                                }
                            end

                            Event:Fire(CharacterList)
                        end)
                    ]], EventID)
                end
            end,

            CustomCharacter = function(Player)
                if not shared.PF_CharMT then
                    shared.PF_CharMT = {}
                    shared.PF_CharMT.__index = shared.PF_CharMT

                    function shared.PF_CharMT:FindFirstChild(Name)
                        return rawget(self, Name)
                    end

                    function shared.PF_CharMT:FindFirstChildOfClass() end
                end

                if PF_CharList and PF_CharList[Player.Name] then
                    local Character = PF_CharList[Player.Name]

                    setmetatable(Character, shared.PF_CharMT)

                    return Character
                end
            end,

            GetHealth = function(Player)
                if PF_CharList and PF_CharList[Player.Name] then
                    return PF_CharList[Player.Name].Health
                end
            end,

            GetAliveState = function(Player)
                if PF_CharList and PF_CharList[Player.Name] then
                    return PF_CharList[Player.Name].Alive
                end
            end,

            CustomRootPartName = 'Torso',
        };
        [2950983942] = {
            CustomCharacter = function(Player)
                if workspace:FindFirstChild'Players' then
                    return workspace.Players:FindFirstChild(Player.Name);
                end
            end
        };
        [2262441883] = {
            CustomPlayerTag = function(Player)
                return Player:FindFirstChild'Job' and (' [' .. Player.Job.Value .. ']') or '';
            end;
            CustomESP = function()
                if workspace:FindFirstChild'MoneyPrinters' then
                    for i, v in pairs(workspace.MoneyPrinters:GetChildren()) do
                        local Main	= v:FindFirstChild'Main';
                        local Owner	= v:FindFirstChild'TrueOwner';
                        local Money	= v:FindFirstChild'Int' and v.Int:FindFirstChild'Money' or nil;
                        if Main and Owner and Money then
                            local O = tostring(Owner.Value);
                            local M = tostring(Money.Value);

                            pcall(RenderList.AddOrUpdateInstance, RenderList, v, Main, string.format('Money Printer\nOwned by %s\n[%s]', O, M), Color3.fromRGB(13, 255, 227));
                        end
                    end
                end
            end;
        };
        -- [4581966615] = {
        -- 	CustomESP = function()
        -- 		if workspace:FindFirstChild'Entities' then
        -- 			for i, v in pairs(workspace.Entities:GetChildren()) do
        -- 				if not v.Name:match'Printer' then continue end

        -- 				local Properties = v:FindFirstChild'Properties' if not Properties then continue end
        -- 				local Main	= v:FindFirstChild'hitbox';
        -- 				local Owner	= Properties:FindFirstChild'Owner';
        -- 				local Money	= Properties:FindFirstChild'CurrentPrinted'
                    
        -- 				if Main and Owner and Money then
        -- 					local O = Owner.Value and tostring(Owner.Value) or 'no one';
        -- 					local M = tostring(Money.Value);

        -- 					pcall(RenderList.AddOrUpdateInstance, RenderList, v, Main, string.format('Money Printer\nOwned by %s\n[%s]', O, M), Color3.fromRGB(13, 255, 227));
        -- 				end
        -- 			end
        -- 		end
        -- 	end;
        -- };
        [4801598506] = {
            CustomESP = function()
                if workspace:FindFirstChild'Mobs' and workspace.Mobs:FindFirstChild'Forest1' then
                    for i, v in pairs(workspace.Mobs.Forest1:GetChildren()) do
                        local Main	= v:FindFirstChild'Head';
                        local Hum	= v:FindFirstChild'Mob';

                        if Main and Hum then
                            pcall(RenderList.AddOrUpdateInstance, RenderList, v, Main, string.format('[%s] [%s/%s]', v.Name, Hum.Health, Hum.MaxHealth), Color3.fromRGB(13, 255, 227));
                        end
                    end
                end
            end;
        };
        [2555873122] = {
            CustomESP = function()
                if workspace:FindFirstChild'WoodPlanks' then
                    for i, v in pairs(workspace:GetChildren()) do
                        if v.Name == 'WoodPlanks' then
                            local Main = v:FindFirstChild'Wood';

                            if Main then
                                pcall(RenderList.AddOrUpdateInstance, RenderList, v, Main, 'Wood Planks', Color3.fromRGB(13, 255, 227));
                            end
                        end
                    end
                end
            end;
        };
        [5208655184] = {
            CustomESP = function()
                -- if workspace:FindFirstChild'Live' then
                -- 	for i, v in pairs(workspace.Live:GetChildren()) do
                -- 		if v.Name:sub(1, 1) == '.' then
                -- 			local Main = v:FindFirstChild'Head';

                -- 			if Main then
                -- 				pcall(RenderList.AddOrUpdateInstance, RenderList, v, Main, v.Name:sub(2), Color3.fromRGB(250, 50, 40));
                -- 			end
                -- 		end
                -- 	end
                -- end
            end;
            CustomPlayerTag = function(Player)
                if game.PlaceVersion < 457 then return '' end

                local Name = '';
                local FirstName = Player:GetAttribute'FirstName'

                if typeof(FirstName) == 'string' and #FirstName > 0 then
                    local Prefix = '';
                    local Extra = {};
                    Name = Name .. '\n[';

                    if Player:GetAttribute'Prestige' > 0 then
                        Name = Name .. '#' .. tostring(Player:GetAttribute'Prestige') .. ' ';
                    end
                    if not IsStringEmpty(Player:GetAttribute'HouseRank') then
                        Prefix = Player:GetAttribute'HouseRank' == 'Owner' and (Player:GetAttribute'Gender' == 'Female' and 'Lady ' or 'Lord ') or '';
                    end
                    if not IsStringEmpty(FirstName) then
                        Name = Name .. '' .. Prefix .. FirstName;
                    end
                    if not IsStringEmpty(Player:GetAttribute'LastName') then
                        Name = Name .. ' ' .. Player:GetAttribute'LastName';
                    end

                    if not IsStringEmpty(Name) then Name = Name .. ']'; end

                    local Character = GetCharacter(Player);

                    if Character then
                        if Character and Character:FindFirstChild'Danger' then table.insert(Extra, 'D'); end
                        if Character:FindFirstChild'ManaAbilities' and Character.ManaAbilities:FindFirstChild'ManaSprint' then table.insert(Extra, 'D1'); end

                        if Character:FindFirstChild'Mana'	 		then table.insert(Extra, 'M' .. math.floor(Character.Mana.Value)); end
                        if Character:FindFirstChild'Vampirism' 		then table.insert(Extra, 'V'); end
                        if Character:FindFirstChild'Observe'		then table.insert(Extra, 'ILL'); end
                        if Character:FindFirstChild'Inferi'			then table.insert(Extra, 'NEC'); end
                        if Character:FindFirstChild'World\'s Pulse' then table.insert(Extra, 'DZIN'); end
                        if Character:FindFirstChild'Shift'		 	then table.insert(Extra, 'MAD'); end
                        if Character:FindFirstChild'Head' and Character.Head:FindFirstChild'FacialMarking' then
                            local FM = Character.Head:FindFirstChild'FacialMarking';
                            if FM.Texture == 'http://www.roblox.com/asset/?id=4072968006' then
                                table.insert(Extra, 'HEALER');
                            elseif FM.Texture == 'http://www.roblox.com/asset/?id=4072914434' then
                                table.insert(Extra, 'SEER');
                            elseif FM.Texture == 'http://www.roblox.com/asset/?id=4094417635' then
                                table.insert(Extra, 'JESTER');
                            elseif FM.Texture == 'http://www.roblox.com/asset/?id=4072968656' then
                                table.insert(Extra, 'BLADE');
                            end
                        end
                    end
                    if Player:FindFirstChild'Backpack' then
                        if Player.Backpack:FindFirstChild'Observe' 			then table.insert(Extra, 'ILL');  end
                        if Player.Backpack:FindFirstChild'Inferi'			then table.insert(Extra, 'NEC');  end
                        if Player.Backpack:FindFirstChild'World\'s Pulse' 	then table.insert(Extra, 'DZIN'); end
                    end

                    if #Extra > 0 then Name = Name .. ' [' .. table.concat(Extra, '-') .. ']'; end
                end

                return Name;
            end;
        };

        [3541987450] = {
            CustomPlayerTag = function(Player)
                local Name = '';

                if Player:FindFirstChild'leaderstats' then
                    Name = Name .. '\n[';
                    local Prefix = '';
                    local Extra = {};
                    if Player.leaderstats:FindFirstChild'Prestige' and Player.leaderstats.Prestige.ClassName == 'IntValue' and Player.leaderstats.Prestige.Value > 0 then
                        Name = Name .. '#' .. tostring(Player.leaderstats.Prestige.Value) .. ' ';
                    end
                    if Player.leaderstats:FindFirstChild'HouseRank' and Player.leaderstats:FindFirstChild'Gender' and Player.leaderstats.HouseRank.ClassName == 'StringValue' and not IsStringEmpty(Player.leaderstats.HouseRank.Value) then
                        Prefix = Player.leaderstats.HouseRank.Value == 'Owner' and (Player.leaderstats.Gender.Value == 'Female' and 'Lady ' or 'Lord ') or '';
                    end
                    if Player.leaderstats:FindFirstChild'FirstName' and Player.leaderstats.FirstName.ClassName == 'StringValue' and not IsStringEmpty(Player.leaderstats.FirstName.Value) then
                        Name = Name .. '' .. Prefix .. Player.leaderstats.FirstName.Value;
                    end
                    if Player.leaderstats:FindFirstChild'LastName' and Player.leaderstats.LastName.ClassName == 'StringValue' and not IsStringEmpty(Player.leaderstats.LastName.Value) then
                        Name = Name .. ' ' .. Player.leaderstats.LastName.Value;
                    end
                    if Player.leaderstats:FindFirstChild'UberTitle' and Player.leaderstats.UberTitle.ClassName == 'StringValue' and not IsStringEmpty(Player.leaderstats.UberTitle.Value) then
                        Name = Name .. ', ' .. Player.leaderstats.UberTitle.Value;
                    end

                    if not IsStringEmpty(Name) then Name = Name .. ']'; end

                    local Character = GetCharacter(Player);

                    if Character then
                        if Character and Character:FindFirstChild'Danger' then table.insert(Extra, 'D'); end
                        if Character:FindFirstChild'ManaAbilities' and Character.ManaAbilities:FindFirstChild'ManaSprint' then table.insert(Extra, 'D1'); end

                        if Character:FindFirstChild'Mana'	 		then table.insert(Extra, 'M' .. math.floor(Character.Mana.Value)); end
                        if Character:FindFirstChild'Vampirism' 		then table.insert(Extra, 'V');    end
                        if Character:FindFirstChild'Observe'			then table.insert(Extra, 'ILL');  end
                        if Character:FindFirstChild'Inferi'			then table.insert(Extra, 'NEC');  end
                        
                        if Character:FindFirstChild'World\'s Pulse' 	then table.insert(Extra, 'DZIN'); end
                        if Character:FindFirstChild'Head' and Character.Head:FindFirstChild'FacialMarking' then
                            local FM = Character.Head:FindFirstChild'FacialMarking';
                            if FM.Texture == 'http://www.roblox.com/asset/?id=4072968006' then
                                table.insert(Extra, 'HEALER');
                            elseif FM.Texture == 'http://www.roblox.com/asset/?id=4072914434' then
                                table.insert(Extra, 'SEER');
                            elseif FM.Texture == 'http://www.roblox.com/asset/?id=4094417635' then
                                table.insert(Extra, 'JESTER');
                            end
                        end
                    end
                    if Player:FindFirstChild'Backpack' then
                        if Player.Backpack:FindFirstChild'Observe' 			then table.insert(Extra, 'ILL');  end
                        if Player.Backpack:FindFirstChild'Inferi'			then table.insert(Extra, 'NEC');  end
                        if Player.Backpack:FindFirstChild'World\'s Pulse' 	then table.insert(Extra, 'DZIN'); end
                    end

                    if #Extra > 0 then Name = Name .. ' [' .. table.concat(Extra, '-') .. ']'; end
                end

                return Name;
            end;
        };

        [4691401390] = { -- Vast Realm
            CustomCharacter = function(Player)
                if workspace:FindFirstChild'Players' then
                    return workspace.Players:FindFirstChild(Player.Name);
                end
            end
        };

        [6032399813] = { -- Deepwoken [Etrean]
            CustomPlayerTag = function(Player)
                local Name = '';
                CharacterName = Player:GetAttribute'CharacterName'; -- could use leaderstats but lazy

                if not IsStringEmpty(CharacterName) then
                    Name = ('\n[%s]'):format(CharacterName);
                    local Character = GetCharacter(Player);
                    local Extra = {};

                    if Character then
                        local Blood, Armor = Character:FindFirstChild('Blood'), Character:FindFirstChild('Armor');

                        if Blood and Blood.ClassName == 'DoubleConstrainedValue' then
                            table.insert(Extra, ('B%d'):format(Blood.Value));
                        end

                        if Armor and Armor.ClassName == 'DoubleConstrainedValue' then
                            table.insert(Extra, ('A%d'):format(math.floor(Armor.Value / 10)));
                        end
                    end

                    local BackpackChildren = Player.Backpack:GetChildren()

                    for index = 1, #BackpackChildren do
                        local Oath = BackpackChildren[index]
                        if Oath.ClassName == 'Folder' and Oath.Name:find('Talent:Oath') then
                            local OathName = Oath.Name:gsub('Talent:Oath: ', '')
                            table.insert(Extra, OathName);
                        end
                    end

                    if #Extra > 0 then Name = Name .. ' [' .. table.concat(Extra, '-') .. ']'; end
                end

                return Name;
            end;
        };

        [5735553160] = { -- Deepwoken [Depths]
            CustomPlayerTag = function(Player)
                local Name = '';
                CharacterName = Player:GetAttribute'CharacterName'; -- could use leaderstats но лень

                if not IsStringEmpty(CharacterName) then
                    Name = ('\n[%s]'):format(CharacterName);
                    local Character = GetCharacter(Player);
                    local Extra = {};

                    if Character then
                        local Blood, Armor = Character:FindFirstChild('Blood'), Character:FindFirstChild('Armor');

                        if Blood and Blood.ClassName == 'DoubleConstrainedValue' then
                            table.insert(Extra, ('B%d'):format(Blood.Value));
                        end

                        if Armor and Armor.ClassName == 'DoubleConstrainedValue' then
                            table.insert(Extra, ('A%d'):format(math.floor(Armor.Value / 10)));
                        end
                    end

                    local BackpackChildren = Player.Backpack:GetChildren()

                    for index = 1, #BackpackChildren do
                        local Oath = BackpackChildren[index]
                        if Oath.ClassName == 'Folder' and Oath.Name:find('Talent:Oath') then
                            local OathName = Oath.Name:gsub('Talent:Oath: ', '')
                            table.insert(Extra, OathName);
                        end
                    end

                    if #Extra > 0 then Name = Name .. ' [' .. table.concat(Extra, '-') .. ']'; end
                end

                return Name;
            end;
        };

        [3127094264] = {
            CustomCharacter = function(Player)
                if not _FIRST then
                    _FIRST = true
                    
                    pcall(function()
                        local GPM = rawget(require(LocalPlayer.PlayerScripts:WaitForChild('Client', 1e9):WaitForChild('Player', 1e9)), 'GetPlayerModel')
                        PList = debug.getupvalue(GPM, 1)
                    end)
                end

                if PList then
                    local Player = rawget(PList, Player.UserId)

                    if Player and Player.model then
                        return Player.model
                    end
                end
            end
        }
    };

    if Modules[game.PlaceId] ~= nil or Modules[game.GameId] ~= nil then
        local Module = Modules[game.PlaceId] or Modules[game.GameId]

        if Module.Initialize then
            Module.Initialize()
        end

        CustomPlayerTag = Module.CustomPlayerTag or nil
        CustomESP = Module.CustomESP or nil
        CustomCharacter = Module.CustomCharacter or nil
        GetHealth = Module.GetHealth or nil
        GetAliveState = Module.GetAliveState or nil
        CustomRootPartName = Module.CustomRootPartName or nil
    end

    function GetCharacter(Player)
        return CustomCharacter and CustomCharacter(Player) or Player.Character
    end

    function GetMouseLocation()
        return UserInputService:GetMouseLocation();
    end

    function MouseHoveringOver(Values)
        local X1, Y1, X2, Y2 = Values[1], Values[2], Values[3], Values[4]
        local MLocation = GetMouseLocation();
        return (MLocation.x >= X1 and MLocation.x <= (X1 + (X2 - X1))) and (MLocation.y >= Y1 and MLocation.y <= (Y1 + (Y2 - Y1)));
    end

    function GetTableData(t) -- basically table.foreach i dont even know почему я это сделал
        if typeof(t) ~= 'table' then return end

        return setmetatable(t, {
            __call = function(t, func)
                if typeof(func) ~= 'function' then return end;
                for i, v in pairs(t) do
                    pcall(func, i, v);
                end
            end;
        });
    end
    local function Format(format, ...)
        return string.format(format, ...);
    end
    function CalculateValue(Min, Max, Percent)
        return Min + math.floor(((Max - Min) * Percent) + .5);
    end

    function NewDrawing(InstanceName)
        local Instance = Drawing.new(InstanceName)

        return (function(Properties)
            for i, v in pairs(Properties) do
                pcall(Set, Instance, i, v)
            end

            return Instance
        end)
    end

    function Menu:AddMenuInstance(Name, DrawingType, Properties)
        local Instance;

        if shared.MenuDrawingData.Instances[Name] ~= nil then
            Instance = shared.MenuDrawingData.Instances[Name];
            for i, v in pairs(Properties) do
                pcall(Set, Instance, i, v);
            end
        else
            Instance = NewDrawing(DrawingType)(Properties);
        end

        shared.MenuDrawingData.Instances[Name] = Instance;

        return Instance;
    end
    function Menu:UpdateMenuInstance(Name)
        local Instance = shared.MenuDrawingData.Instances[Name];
        if Instance ~= nil then
            return (function(Properties)
                for i, v in pairs(Properties) do
                    pcall(Set, Instance, i, v);
                end
                return Instance;
            end)
        end
    end
    function Menu:GetInstance(Name)
        return shared.MenuDrawingData.Instances[Name];
    end

    local Options = setmetatable({}, {
        __call = function(t, ...)
            local Arguments = {...};
            local Name = Arguments[1];
            OIndex = OIndex + 1;
            rawset(t, Name, setmetatable({
                Name			= Arguments[1];
                Text			= Arguments[2];
                Value			= Arguments[3];
                DefaultValue	= Arguments[3];
                AllArgs			= Arguments;
                Index			= OIndex;
            }, {
                __call = function(t, v, force)
                    local self = t;

                    if typeof(t.Value) == 'function' then
                        t.Value
